{"ast":null,"code":"/**\n * Highcharts JS v11.2.0 (2023-10-30)\n *\n * Exporting module\n *\n * (c) 2010-2021 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */!function (e) {\n  \"object\" == typeof module && module.exports ? (e.default = e, module.exports = e) : \"function\" == typeof define && define.amd ? define(\"highcharts/modules/exporting\", [\"highcharts\"], function (t) {\n    return e(t), e.Highcharts = t, e;\n  }) : e(\"undefined\" != typeof Highcharts ? Highcharts : void 0);\n}(function (e) {\n  \"use strict\";\n\n  var t = e ? e._modules : {};\n  function n(e, t, n, i) {\n    e.hasOwnProperty(t) || (e[t] = i.apply(null, n), \"function\" == typeof CustomEvent && window.dispatchEvent(new CustomEvent(\"HighchartsModuleLoaded\", {\n      detail: {\n        path: t,\n        module: e[t]\n      }\n    })));\n  }\n  n(t, \"Core/Chart/ChartNavigationComposition.js\", [], function () {\n    var e;\n    return function (e) {\n      e.compose = function (e) {\n        return e.navigation || (e.navigation = new t(e)), e;\n      };\n      class t {\n        constructor(e) {\n          this.updates = [], this.chart = e;\n        }\n        addUpdate(e) {\n          this.chart.navigation.updates.push(e);\n        }\n        update(e, t) {\n          this.updates.forEach(n => {\n            n.call(this.chart, e, t);\n          });\n        }\n      }\n      e.Additions = t;\n    }(e || (e = {})), e;\n  }), n(t, \"Extensions/Exporting/ExportingDefaults.js\", [t[\"Core/Globals.js\"]], function (e) {\n    let {\n      isTouchDevice: t\n    } = e;\n    return {\n      exporting: {\n        allowTableSorting: !0,\n        type: \"image/png\",\n        url: \"https://export.highcharts.com/\",\n        pdfFont: {\n          normal: void 0,\n          bold: void 0,\n          bolditalic: void 0,\n          italic: void 0\n        },\n        printMaxWidth: 780,\n        scale: 2,\n        buttons: {\n          contextButton: {\n            className: \"highcharts-contextbutton\",\n            menuClassName: \"highcharts-contextmenu\",\n            symbol: \"menu\",\n            titleKey: \"contextButtonTitle\",\n            menuItems: [\"viewFullscreen\", \"printChart\", \"separator\", \"downloadPNG\", \"downloadJPEG\", \"downloadPDF\", \"downloadSVG\"]\n          }\n        },\n        menuItemDefinitions: {\n          viewFullscreen: {\n            textKey: \"viewFullscreen\",\n            onclick: function () {\n              this.fullscreen && this.fullscreen.toggle();\n            }\n          },\n          printChart: {\n            textKey: \"printChart\",\n            onclick: function () {\n              this.print();\n            }\n          },\n          separator: {\n            separator: !0\n          },\n          downloadPNG: {\n            textKey: \"downloadPNG\",\n            onclick: function () {\n              this.exportChart();\n            }\n          },\n          downloadJPEG: {\n            textKey: \"downloadJPEG\",\n            onclick: function () {\n              this.exportChart({\n                type: \"image/jpeg\"\n              });\n            }\n          },\n          downloadPDF: {\n            textKey: \"downloadPDF\",\n            onclick: function () {\n              this.exportChart({\n                type: \"application/pdf\"\n              });\n            }\n          },\n          downloadSVG: {\n            textKey: \"downloadSVG\",\n            onclick: function () {\n              this.exportChart({\n                type: \"image/svg+xml\"\n              });\n            }\n          }\n        }\n      },\n      lang: {\n        viewFullscreen: \"View in full screen\",\n        exitFullscreen: \"Exit from full screen\",\n        printChart: \"Print chart\",\n        downloadPNG: \"Download PNG image\",\n        downloadJPEG: \"Download JPEG image\",\n        downloadPDF: \"Download PDF document\",\n        downloadSVG: \"Download SVG vector image\",\n        contextButtonTitle: \"Chart context menu\"\n      },\n      navigation: {\n        buttonOptions: {\n          symbolSize: 14,\n          symbolX: 14.5,\n          symbolY: 13.5,\n          align: \"right\",\n          buttonSpacing: 3,\n          height: 28,\n          verticalAlign: \"top\",\n          width: 28,\n          symbolFill: \"#666666\",\n          symbolStroke: \"#666666\",\n          symbolStrokeWidth: 3,\n          theme: {\n            padding: 5\n          }\n        },\n        menuStyle: {\n          border: \"none\",\n          borderRadius: \"3px\",\n          background: \"#ffffff\",\n          padding: \"0.5em\"\n        },\n        menuItemStyle: {\n          background: \"none\",\n          borderRadius: \"3px\",\n          color: \"#333333\",\n          padding: \"0.5em\",\n          fontSize: t ? \"0.9em\" : \"0.8em\",\n          transition: \"background 250ms, color 250ms\"\n        },\n        menuItemHoverStyle: {\n          background: \"#f2f2f2\"\n        }\n      }\n    };\n  }), n(t, \"Extensions/Exporting/ExportingSymbols.js\", [], function () {\n    var e;\n    return function (e) {\n      let t = [];\n      function n(e, t, n, i) {\n        return [[\"M\", e, t + 2.5], [\"L\", e + n, t + 2.5], [\"M\", e, t + i / 2 + .5], [\"L\", e + n, t + i / 2 + .5], [\"M\", e, t + i - 1.5], [\"L\", e + n, t + i - 1.5]];\n      }\n      function i(e, t, n, i) {\n        let o = i / 3 - 2;\n        return [].concat(this.circle(n - o, t, o, o), this.circle(n - o, t + o + 4, o, o), this.circle(n - o, t + 2 * (o + 4), o, o));\n      }\n      e.compose = function (e) {\n        if (-1 === t.indexOf(e)) {\n          t.push(e);\n          let o = e.prototype.symbols;\n          o.menu = n, o.menuball = i.bind(o);\n        }\n      };\n    }(e || (e = {})), e;\n  }), n(t, \"Extensions/Exporting/Fullscreen.js\", [t[\"Core/Renderer/HTML/AST.js\"], t[\"Core/Utilities.js\"]], function (e, t) {\n    let {\n        addEvent: n,\n        fireEvent: i\n      } = t,\n      o = [];\n    function r() {\n      this.fullscreen = new s(this);\n    }\n    class s {\n      static compose(e) {\n        t.pushUnique(o, e) && n(e, \"beforeRender\", r);\n      }\n      constructor(e) {\n        this.chart = e, this.isOpen = !1;\n        let t = e.renderTo;\n        !this.browserProps && (\"function\" == typeof t.requestFullscreen ? this.browserProps = {\n          fullscreenChange: \"fullscreenchange\",\n          requestFullscreen: \"requestFullscreen\",\n          exitFullscreen: \"exitFullscreen\"\n        } : t.mozRequestFullScreen ? this.browserProps = {\n          fullscreenChange: \"mozfullscreenchange\",\n          requestFullscreen: \"mozRequestFullScreen\",\n          exitFullscreen: \"mozCancelFullScreen\"\n        } : t.webkitRequestFullScreen ? this.browserProps = {\n          fullscreenChange: \"webkitfullscreenchange\",\n          requestFullscreen: \"webkitRequestFullScreen\",\n          exitFullscreen: \"webkitExitFullscreen\"\n        } : t.msRequestFullscreen && (this.browserProps = {\n          fullscreenChange: \"MSFullscreenChange\",\n          requestFullscreen: \"msRequestFullscreen\",\n          exitFullscreen: \"msExitFullscreen\"\n        }));\n      }\n      close() {\n        let e = this,\n          t = e.chart,\n          n = t.options.chart;\n        i(t, \"fullscreenClose\", null, function () {\n          e.isOpen && e.browserProps && t.container.ownerDocument instanceof Document && t.container.ownerDocument[e.browserProps.exitFullscreen](), e.unbindFullscreenEvent && (e.unbindFullscreenEvent = e.unbindFullscreenEvent()), t.setSize(e.origWidth, e.origHeight, !1), e.origWidth = void 0, e.origHeight = void 0, n.width = e.origWidthOption, n.height = e.origHeightOption, e.origWidthOption = void 0, e.origHeightOption = void 0, e.isOpen = !1, e.setButtonText();\n        });\n      }\n      open() {\n        let e = this,\n          t = e.chart,\n          o = t.options.chart;\n        i(t, \"fullscreenOpen\", null, function () {\n          if (o && (e.origWidthOption = o.width, e.origHeightOption = o.height), e.origWidth = t.chartWidth, e.origHeight = t.chartHeight, e.browserProps) {\n            let i = n(t.container.ownerDocument, e.browserProps.fullscreenChange, function () {\n                e.isOpen ? (e.isOpen = !1, e.close()) : (t.setSize(null, null, !1), e.isOpen = !0, e.setButtonText());\n              }),\n              o = n(t, \"destroy\", i);\n            e.unbindFullscreenEvent = () => {\n              i(), o();\n            };\n            let r = t.renderTo[e.browserProps.requestFullscreen]();\n            r && r.catch(function () {\n              alert(\"Full screen is not supported inside a frame.\");\n            });\n          }\n        });\n      }\n      setButtonText() {\n        let t = this.chart,\n          n = t.exportDivElements,\n          i = t.options.exporting,\n          o = i && i.buttons && i.buttons.contextButton.menuItems,\n          r = t.options.lang;\n        if (i && i.menuItemDefinitions && r && r.exitFullscreen && r.viewFullscreen && o && n) {\n          let t = n[o.indexOf(\"viewFullscreen\")];\n          t && e.setElementHTML(t, this.isOpen ? r.exitFullscreen : i.menuItemDefinitions.viewFullscreen.text || r.viewFullscreen);\n        }\n      }\n      toggle() {\n        this.isOpen ? this.close() : this.open();\n      }\n    }\n    return s;\n  }), n(t, \"Core/HttpUtilities.js\", [t[\"Core/Globals.js\"], t[\"Core/Utilities.js\"]], function (e, t) {\n    let {\n        doc: n\n      } = e,\n      {\n        createElement: i,\n        discardElement: o,\n        merge: r,\n        objectEach: s\n      } = t,\n      l = {\n        ajax: function (e) {\n          let t = {\n              json: \"application/json\",\n              xml: \"application/xml\",\n              text: \"text/plain\",\n              octet: \"application/octet-stream\"\n            },\n            n = new XMLHttpRequest();\n          function i(t, n) {\n            e.error && e.error(t, n);\n          }\n          if (!e.url) return !1;\n          n.open((e.type || \"get\").toUpperCase(), e.url, !0), e.headers && e.headers[\"Content-Type\"] || n.setRequestHeader(\"Content-Type\", t[e.dataType || \"json\"] || t.text), s(e.headers, function (e, t) {\n            n.setRequestHeader(t, e);\n          }), e.responseType && (n.responseType = e.responseType), n.onreadystatechange = function () {\n            let t;\n            if (4 === n.readyState) {\n              if (200 === n.status) {\n                if (\"blob\" !== e.responseType && (t = n.responseText, \"json\" === e.dataType)) try {\n                  t = JSON.parse(t);\n                } catch (e) {\n                  if (e instanceof Error) return i(n, e);\n                }\n                return e.success && e.success(t, n);\n              }\n              i(n, n.responseText);\n            }\n          }, e.data && \"string\" != typeof e.data && (e.data = JSON.stringify(e.data)), n.send(e.data);\n        },\n        getJSON: function (e, t) {\n          l.ajax({\n            url: e,\n            success: t,\n            dataType: \"json\",\n            headers: {\n              \"Content-Type\": \"text/plain\"\n            }\n          });\n        },\n        post: function (e, t, l) {\n          let a = i(\"form\", r({\n            method: \"post\",\n            action: e,\n            enctype: \"multipart/form-data\"\n          }, l), {\n            display: \"none\"\n          }, n.body);\n          s(t, function (e, t) {\n            i(\"input\", {\n              type: \"hidden\",\n              name: t,\n              value: e\n            }, void 0, a);\n          }), a.submit(), o(a);\n        }\n      };\n    return l;\n  }), n(t, \"Extensions/Exporting/Exporting.js\", [t[\"Core/Renderer/HTML/AST.js\"], t[\"Core/Chart/Chart.js\"], t[\"Core/Chart/ChartNavigationComposition.js\"], t[\"Core/Defaults.js\"], t[\"Extensions/Exporting/ExportingDefaults.js\"], t[\"Extensions/Exporting/ExportingSymbols.js\"], t[\"Extensions/Exporting/Fullscreen.js\"], t[\"Core/Globals.js\"], t[\"Core/HttpUtilities.js\"], t[\"Core/Utilities.js\"]], function (e, t, n, i, o, r, s, l, a, c) {\n    var u;\n    let {\n        defaultOptions: p,\n        setOptions: h\n      } = i,\n      {\n        doc: d,\n        SVG_NS: g,\n        win: f\n      } = l,\n      {\n        addEvent: m,\n        css: x,\n        createElement: y,\n        discardElement: b,\n        extend: v,\n        find: w,\n        fireEvent: E,\n        isObject: C,\n        merge: S,\n        objectEach: T,\n        pick: F,\n        removeEvent: O,\n        uniqueKey: M\n      } = c;\n    return function (t) {\n      let i;\n      let u = [],\n        k = [/-/, /^(clipPath|cssText|d|height|width)$/, /^font$/, /[lL]ogical(Width|Height)$/, /^parentRule$/, /^(cssRules|ownerRules)$/, /perspective/, /TapHighlightColor/, /^transition/, /^length$/, /^[0-9]+$/],\n        P = [\"fill\", \"stroke\", \"strokeLinecap\", \"strokeLinejoin\", \"strokeWidth\", \"textAnchor\", \"x\", \"y\"];\n      t.inlineAllowlist = [];\n      let N = [\"clipPath\", \"defs\", \"desc\"];\n      function j(e) {\n        let t, n;\n        let i = this,\n          o = i.renderer,\n          r = S(i.options.navigation.buttonOptions, e),\n          s = r.onclick,\n          l = r.menuItems,\n          a = r.symbolSize || 12;\n        if (i.btnCount || (i.btnCount = 0), i.exportDivElements || (i.exportDivElements = [], i.exportSVGElements = []), !1 === r.enabled || !r.theme) return;\n        let c = r.theme;\n        i.styledMode || (c.fill = F(c.fill, \"#ffffff\"), c.stroke = F(c.stroke, \"none\")), s ? n = function (e) {\n          e && e.stopPropagation(), s.call(i, e);\n        } : l && (n = function (e) {\n          e && e.stopPropagation(), i.contextMenu(u.menuClassName, l, u.translateX || 0, u.translateY || 0, u.width || 0, u.height || 0, u), u.setState(2);\n        }), r.text && r.symbol ? c.paddingLeft = F(c.paddingLeft, 30) : r.text || v(c, {\n          width: r.width,\n          height: r.height,\n          padding: 0\n        }), i.styledMode || (c[\"stroke-linecap\"] = \"round\", c.fill = F(c.fill, \"#ffffff\"), c.stroke = F(c.stroke, \"none\"));\n        let u = o.button(r.text, 0, 0, n, c, void 0, void 0, void 0, void 0, r.useHTML).addClass(e.className).attr({\n          title: F(i.options.lang[r._titleKey || r.titleKey], \"\")\n        });\n        u.menuClassName = e.menuClassName || \"highcharts-menu-\" + i.btnCount++, r.symbol && (t = o.symbol(r.symbol, r.symbolX - a / 2, r.symbolY - a / 2, a, a, {\n          width: a,\n          height: a\n        }).addClass(\"highcharts-button-symbol\").attr({\n          zIndex: 1\n        }).add(u), i.styledMode || t.attr({\n          stroke: r.symbolStroke,\n          fill: r.symbolFill,\n          \"stroke-width\": r.symbolStrokeWidth || 1\n        })), u.add(i.exportingGroup).align(v(r, {\n          width: u.width,\n          x: F(r.x, i.buttonOffset)\n        }), !0, \"spacingBox\"), i.buttonOffset += ((u.width || 0) + r.buttonSpacing) * (\"right\" === r.align ? -1 : 1), i.exportSVGElements.push(u, t);\n      }\n      function H() {\n        if (!this.printReverseInfo) return;\n        let {\n          childNodes: e,\n          origDisplay: t,\n          resetParams: n\n        } = this.printReverseInfo;\n        this.moveContainers(this.renderTo), [].forEach.call(e, function (e, n) {\n          1 === e.nodeType && (e.style.display = t[n] || \"\");\n        }), this.isPrinting = !1, n && this.setSize.apply(this, n), delete this.printReverseInfo, i = void 0, E(this, \"afterPrint\");\n      }\n      function D() {\n        let e = d.body,\n          t = this.options.exporting.printMaxWidth,\n          n = {\n            childNodes: e.childNodes,\n            origDisplay: [],\n            resetParams: void 0\n          };\n        this.isPrinting = !0, this.pointer.reset(null, 0), E(this, \"beforePrint\");\n        let i = t && this.chartWidth > t;\n        i && (n.resetParams = [this.options.chart.width, void 0, !1], this.setSize(t, void 0, !1)), [].forEach.call(n.childNodes, function (e, t) {\n          1 === e.nodeType && (n.origDisplay[t] = e.style.display, e.style.display = \"none\");\n        }), this.moveContainers(e), this.printReverseInfo = n;\n      }\n      function G(e) {\n        e.renderExporting(), m(e, \"redraw\", e.renderExporting), m(e, \"destroy\", e.destroyExport);\n      }\n      function W(t, n, i, o, r, s, l) {\n        let a = this,\n          u = a.options.navigation,\n          p = a.chartWidth,\n          h = a.chartHeight,\n          g = \"cache-\" + t,\n          b = Math.max(r, s),\n          w,\n          S = a[g];\n        S || (a.exportContextMenu = a[g] = S = y(\"div\", {\n          className: t\n        }, {\n          position: \"absolute\",\n          zIndex: 1e3,\n          padding: b + \"px\",\n          pointerEvents: \"auto\",\n          ...a.renderer.style\n        }, a.fixedDiv || a.container), w = y(\"ul\", {\n          className: \"highcharts-menu\"\n        }, a.styledMode ? {} : {\n          listStyle: \"none\",\n          margin: 0,\n          padding: 0\n        }, S), a.styledMode || x(w, v({\n          MozBoxShadow: \"3px 3px 10px #888\",\n          WebkitBoxShadow: \"3px 3px 10px #888\",\n          boxShadow: \"3px 3px 10px #888\"\n        }, u.menuStyle)), S.hideMenu = function () {\n          x(S, {\n            display: \"none\"\n          }), l && l.setState(0), a.openMenu = !1, x(a.renderTo, {\n            overflow: \"hidden\"\n          }), x(a.container, {\n            overflow: \"hidden\"\n          }), c.clearTimeout(S.hideTimer), E(a, \"exportMenuHidden\");\n        }, a.exportEvents.push(m(S, \"mouseleave\", function () {\n          S.hideTimer = f.setTimeout(S.hideMenu, 500);\n        }), m(S, \"mouseenter\", function () {\n          c.clearTimeout(S.hideTimer);\n        }), m(d, \"mouseup\", function (e) {\n          a.pointer.inClass(e.target, t) || S.hideMenu();\n        }), m(S, \"click\", function () {\n          a.openMenu && S.hideMenu();\n        })), n.forEach(function (t) {\n          if (\"string\" == typeof t && (t = a.options.exporting.menuItemDefinitions[t]), C(t, !0)) {\n            let n;\n            t.separator ? n = y(\"hr\", void 0, void 0, w) : (\"viewData\" === t.textKey && a.isDataTableVisible && (t.textKey = \"hideData\"), n = y(\"li\", {\n              className: \"highcharts-menu-item\",\n              onclick: function (e) {\n                e && e.stopPropagation(), S.hideMenu(), t.onclick && t.onclick.apply(a, arguments);\n              }\n            }, void 0, w), e.setElementHTML(n, t.text || a.options.lang[t.textKey]), a.styledMode || (n.onmouseover = function () {\n              x(this, u.menuItemHoverStyle);\n            }, n.onmouseout = function () {\n              x(this, u.menuItemStyle);\n            }, x(n, v({\n              cursor: \"pointer\"\n            }, u.menuItemStyle || {})))), a.exportDivElements.push(n);\n          }\n        }), a.exportDivElements.push(w, S), a.exportMenuWidth = S.offsetWidth, a.exportMenuHeight = S.offsetHeight);\n        let T = {\n          display: \"block\"\n        };\n        i + a.exportMenuWidth > p ? T.right = p - i - r - b + \"px\" : T.left = i - b + \"px\", o + s + a.exportMenuHeight > h && \"top\" !== l.alignOptions.verticalAlign ? T.bottom = h - o - b + \"px\" : T.top = o + s - b + \"px\", x(S, T), x(a.renderTo, {\n          overflow: \"\"\n        }), x(a.container, {\n          overflow: \"\"\n        }), a.openMenu = !0, E(a, \"exportMenuShown\");\n      }\n      function I(e) {\n        let t;\n        let n = e ? e.target : this,\n          i = n.exportSVGElements,\n          o = n.exportDivElements,\n          r = n.exportEvents;\n        i && (i.forEach((e, o) => {\n          e && (e.onclick = e.ontouchstart = null, n[t = \"cache-\" + e.menuClassName] && delete n[t], i[o] = e.destroy());\n        }), i.length = 0), n.exportingGroup && (n.exportingGroup.destroy(), delete n.exportingGroup), o && (o.forEach(function (e, t) {\n          e && (c.clearTimeout(e.hideTimer), O(e, \"mouseleave\"), o[t] = e.onmouseout = e.onmouseover = e.ontouchstart = e.onclick = null, b(e));\n        }), o.length = 0), r && (r.forEach(function (e) {\n          e();\n        }), r.length = 0);\n      }\n      function R(e, t) {\n        let n = this.getSVGForExport(e, t);\n        e = S(this.options.exporting, e), a.post(e.url, {\n          filename: e.filename ? e.filename.replace(/\\//g, \"-\") : this.getFilename(),\n          type: e.type,\n          width: e.width,\n          scale: e.scale,\n          svg: n\n        }, e.formAttributes);\n      }\n      function q() {\n        return this.styledMode && this.inlineStyles(), this.container.innerHTML;\n      }\n      function L() {\n        let e = this.userOptions.title && this.userOptions.title.text,\n          t = this.options.exporting.filename;\n        return t ? t.replace(/\\//g, \"-\") : (\"string\" == typeof e && (t = e.toLowerCase().replace(/<\\/?[^>]+(>|$)/g, \"\").replace(/[\\s_]+/g, \"-\").replace(/[^a-z0-9\\-]/g, \"\").replace(/^[\\-]+/g, \"\").replace(/[\\-]+/g, \"-\").substr(0, 24).replace(/[\\-]+$/g, \"\")), (!t || t.length < 5) && (t = \"chart\"), t);\n      }\n      function z(e) {\n        let t,\n          n,\n          i = S(this.options, e);\n        i.plotOptions = S(this.userOptions.plotOptions, e && e.plotOptions), i.time = S(this.userOptions.time, e && e.time);\n        let o = y(\"div\", null, {\n            position: \"absolute\",\n            top: \"-9999em\",\n            width: this.chartWidth + \"px\",\n            height: this.chartHeight + \"px\"\n          }, d.body),\n          r = this.renderTo.style.width,\n          s = this.renderTo.style.height,\n          l = i.exporting.sourceWidth || i.chart.width || /px$/.test(r) && parseInt(r, 10) || (i.isGantt ? 800 : 600),\n          a = i.exporting.sourceHeight || i.chart.height || /px$/.test(s) && parseInt(s, 10) || 400;\n        v(i.chart, {\n          animation: !1,\n          renderTo: o,\n          forExport: !0,\n          renderer: \"SVGRenderer\",\n          width: l,\n          height: a\n        }), i.exporting.enabled = !1, delete i.data, i.series = [], this.series.forEach(function (e) {\n          (n = S(e.userOptions, {\n            animation: !1,\n            enableMouseTracking: !1,\n            showCheckbox: !1,\n            visible: e.visible\n          })).isInternal || i.series.push(n);\n        });\n        let c = {};\n        this.axes.forEach(function (e) {\n          e.userOptions.internalKey || (e.userOptions.internalKey = M()), e.options.isInternal || (c[e.coll] || (c[e.coll] = !0, i[e.coll] = []), i[e.coll].push(S(e.userOptions, {\n            visible: e.visible\n          })));\n        });\n        let u = new this.constructor(i, this.callback);\n        return e && [\"xAxis\", \"yAxis\", \"series\"].forEach(function (t) {\n          let n = {};\n          e[t] && (n[t] = e[t], u.update(n));\n        }), this.axes.forEach(function (e) {\n          let t = w(u.axes, function (t) {\n              return t.options.internalKey === e.userOptions.internalKey;\n            }),\n            n = e.getExtremes(),\n            i = n.userMin,\n            o = n.userMax;\n          t && (void 0 !== i && i !== t.min || void 0 !== o && o !== t.max) && t.setExtremes(i, o, !0, !1);\n        }), t = u.getChartHTML(), E(this, \"getSVG\", {\n          chartCopy: u\n        }), t = this.sanitizeSVG(t, i), i = null, u.destroy(), b(o), t;\n      }\n      function V(e, t) {\n        let n = this.options.exporting;\n        return this.getSVG(S({\n          chart: {\n            borderRadius: 0\n          }\n        }, n.chartOptions, t, {\n          exporting: {\n            sourceWidth: e && e.sourceWidth || n.sourceWidth,\n            sourceHeight: e && e.sourceHeight || n.sourceHeight\n          }\n        }));\n      }\n      function $() {\n        let e;\n        let n = t.inlineAllowlist,\n          i = {},\n          o = d.createElement(\"iframe\");\n        x(o, {\n          width: \"1px\",\n          height: \"1px\",\n          visibility: \"hidden\"\n        }), d.body.appendChild(o);\n        let r = o.contentWindow && o.contentWindow.document;\n        r && r.body.appendChild(r.createElementNS(g, \"svg\")), function t(o) {\n          let s, a, c, u, p, h;\n          let d = {};\n          if (r && 1 === o.nodeType && -1 === N.indexOf(o.nodeName)) {\n            if (s = f.getComputedStyle(o, null), a = \"svg\" === o.nodeName ? {} : f.getComputedStyle(o.parentNode, null), !i[o.nodeName]) {\n              e = r.getElementsByTagName(\"svg\")[0], c = r.createElementNS(o.namespaceURI, o.nodeName), e.appendChild(c);\n              let t = f.getComputedStyle(c, null),\n                n = {};\n              for (let e in t) \"string\" != typeof t[e] || /^[0-9]+$/.test(e) || (n[e] = t[e]);\n              i[o.nodeName] = n, \"text\" === o.nodeName && delete i.text.fill, e.removeChild(c);\n            }\n            for (let e in s) (l.isFirefox || l.isMS || l.isSafari || Object.hasOwnProperty.call(s, e)) && function (e, t) {\n              if (u = p = !1, n.length) {\n                for (h = n.length; h-- && !p;) p = n[h].test(t);\n                u = !p;\n              }\n              for (\"transform\" === t && \"none\" === e && (u = !0), h = k.length; h-- && !u;) u = k[h].test(t) || \"function\" == typeof e;\n              !u && (a[t] !== e || \"svg\" === o.nodeName) && i[o.nodeName][t] !== e && (P && -1 === P.indexOf(t) ? d[t] = e : e && o.setAttribute(t.replace(/([A-Z])/g, function (e, t) {\n                return \"-\" + t.toLowerCase();\n              }), e));\n            }(s[e], e);\n            if (x(o, d), \"svg\" === o.nodeName && o.setAttribute(\"stroke-width\", \"1px\"), \"text\" === o.nodeName) return;\n            [].forEach.call(o.children || o.childNodes, t);\n          }\n        }(this.container.querySelector(\"svg\")), e.parentNode.removeChild(e), o.parentNode.removeChild(o);\n      }\n      function K(e) {\n        (this.fixedDiv ? [this.fixedDiv, this.scrollingContainer] : [this.container]).forEach(function (t) {\n          e.appendChild(t);\n        });\n      }\n      function A() {\n        let e = this,\n          t = (t, n, i) => {\n            e.isDirtyExporting = !0, S(!0, e.options[t], n), F(i, !0) && e.redraw();\n          };\n        e.exporting = {\n          update: function (e, n) {\n            t(\"exporting\", e, n);\n          }\n        }, n.compose(e).navigation.addUpdate((e, n) => {\n          t(\"navigation\", e, n);\n        });\n      }\n      function U() {\n        let e = this;\n        e.isPrinting || (i = e, l.isSafari || e.beforePrint(), setTimeout(() => {\n          f.focus(), f.print(), l.isSafari || setTimeout(() => {\n            e.afterPrint();\n          }, 1e3);\n        }, 1));\n      }\n      function B() {\n        let e = this,\n          t = e.options.exporting,\n          n = t.buttons,\n          i = e.isDirtyExporting || !e.exportSVGElements;\n        e.buttonOffset = 0, e.isDirtyExporting && e.destroyExport(), i && !1 !== t.enabled && (e.exportEvents = [], e.exportingGroup = e.exportingGroup || e.renderer.g(\"exporting-group\").attr({\n          zIndex: 3\n        }).add(), T(n, function (t) {\n          e.addButton(t);\n        }), e.isDirtyExporting = !1);\n      }\n      function J(e, t) {\n        let n = e.indexOf(\"</svg>\") + 6,\n          i = e.substr(n);\n        return e = e.substr(0, n), t && t.exporting && t.exporting.allowHTML && i && (i = '<foreignObject x=\"0\" y=\"0\" width=\"' + t.chart.width + '\" height=\"' + t.chart.height + '\"><body xmlns=\"http://www.w3.org/1999/xhtml\">' + i.replace(/(<(?:img|br).*?(?=\\>))>/g, \"$1 />\") + \"</body></foreignObject>\", e = e.replace(\"</svg>\", i + \"</svg>\")), e = e.replace(/zIndex=\"[^\"]+\"/g, \"\").replace(/symbolName=\"[^\"]+\"/g, \"\").replace(/jQuery[0-9]+=\"[^\"]+\"/g, \"\").replace(/url\\((\"|&quot;)(.*?)(\"|&quot;)\\;?\\)/g, \"url($2)\").replace(/url\\([^#]+#/g, \"url(#\").replace(/<svg /, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" ').replace(/ (|NS[0-9]+\\:)href=/g, \" xlink:href=\").replace(/\\n/, \" \").replace(/(fill|stroke)=\"rgba\\(([ 0-9]+,[ 0-9]+,[ 0-9]+),([ 0-9\\.]+)\\)\"/g, '$1=\"rgb($2)\" $1-opacity=\"$3\"').replace(/&nbsp;/g, \"\\xa0\").replace(/&shy;/g, \"\\xad\");\n      }\n      t.compose = function (e, t) {\n        if (r.compose(t), s.compose(e), c.pushUnique(u, e)) {\n          let t = e.prototype;\n          t.afterPrint = H, t.exportChart = R, t.inlineStyles = $, t.print = U, t.sanitizeSVG = J, t.getChartHTML = q, t.getSVG = z, t.getSVGForExport = V, t.getFilename = L, t.moveContainers = K, t.beforePrint = D, t.contextMenu = W, t.addButton = j, t.destroyExport = I, t.renderExporting = B, t.callbacks.push(G), m(e, \"init\", A), l.isSafari && l.win.matchMedia(\"print\").addListener(function (e) {\n            i && (e.matches ? i.beforePrint() : i.afterPrint());\n          });\n        }\n        c.pushUnique(u, h) && (p.exporting = S(o.exporting, p.exporting), p.lang = S(o.lang, p.lang), p.navigation = S(o.navigation, p.navigation));\n      };\n    }(u || (u = {})), u;\n  }), n(t, \"masters/modules/exporting.src.js\", [t[\"Core/Globals.js\"], t[\"Extensions/Exporting/Exporting.js\"], t[\"Core/HttpUtilities.js\"]], function (e, t, n) {\n    e.HttpUtilities = n, e.ajax = n.ajax, e.getJSON = n.getJSON, e.post = n.post, t.compose(e.Chart, e.Renderer);\n  });\n}); //# sourceMappingURL=exporting.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}