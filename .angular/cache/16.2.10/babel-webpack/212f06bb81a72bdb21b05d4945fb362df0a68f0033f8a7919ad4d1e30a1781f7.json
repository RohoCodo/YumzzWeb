{"ast":null,"code":"import Chart from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/wasm.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nfunction AdminHomePageComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Profitability Result: \", ctx_r0.profitabilityResult, \"\");\n  }\n}\nconst _c0 = \".homepageTitle[_ngcontent-%COMP%]{text-align:center;font-size:70px}body[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;justify-content:space-between}.chart-container[_ngcontent-%COMP%]{width:8%;margin-bottom:20px}.chart[_ngcontent-%COMP%]{height:300px;border:1px solid #ddd}\";\nlet AdminHomePageComponent = /*#__PURE__*/(() => {\n  class AdminHomePageComponent {\n    constructor(wasmService) {\n      this.wasmService = wasmService;\n      this.dishName = '';\n      this.ingredient = '';\n      this.ingredientsTxtData = ''; // Text of Text file gotten from firebase\n      this.ingredientsQuantAmtTxtData = ''; // Text of Text file gotten from firebase\n      this.recipeData = [];\n      this.ingredientQuantAmtData = [];\n      this.profitabilityResult = null; // Variable to store the result\n      // Replace these arrays with your actual data\n      this.dishNames = [\"Dish1\", \"Dish2\", \"Dish3\", \"Dish4\", \"Dish5\"];\n      this.foodCosts = [10, 15, 12, 8, 20];\n      this.orderingFrequency = [2, 3, 1, 4, 2];\n      this.reorderAlert = [false, true, false, true, false]; // Replace with actual boolean values\n      this.runningLowReminder = [true, false, true, false, true]; // Replace with actual boolean values\n      this.reorderPoint = [30, 25, 35, 20, 40];\n    }\n    ngOnInit() {\n      // Create chart instances with your data\n      // Example: Use the WasmService to run your C++ analysis\n      const result = this.wasmService.runAnalysis(this.foodCostsChart);\n      console.log('Analysis Result:', result);\n      this.foodCostsChart = this.createBarChart('foodCostsChart', 'Food Costs', this.foodCosts, 'blue');\n      this.orderingFrequencyChart = this.createBarChart('orderingFrequencyChart', 'Ordering Frequency', this.orderingFrequency, 'green');\n      this.reorderAlertChart = this.createBarChart('reorderAlertChart', 'Reorder Alert', this.reorderAlert.map(alert => alert ? 1 : 0), 'red');\n      this.runningLowReminderChart = this.createBarChart('runningLowReminderChart', 'Running Low Reminder', this.runningLowReminder.map(reminder => reminder ? 1 : 0), 'orange');\n      this.reorderPointChart = this.createBarChart('reorderPointChart', 'Reorder Point', this.reorderPoint, 'purple');\n    }\n    // Function to create a bar chart\n    createBarChart(canvasId, label, data, color) {\n      const canvas = document.getElementById(canvasId);\n      const ctx = canvas.getContext('2d');\n      return new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: this.dishNames,\n          datasets: [{\n            label: label,\n            data: data,\n            backgroundColor: color\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n    calculateProfitMargin() {\n      this.wasmService.calculateIngredientDirectCostfromData(this.dishName).subscribe(result => {\n        this.profitabilityResult = result;\n      }, error => {\n        console.error('Error calculating profitability:', error);\n        // Handle errors as needed\n      });\n    }\n    // Method to handle button click\n    onCalculateProfitMarginClick() {\n      this.calculateProfitMargin();\n    }\n    deleteDish() {\n      // Call your API endpoint with this.dishName, etc.\n      // Handle the response\n    }\n    static #_ = this.ɵfac = function AdminHomePageComponent_Factory(t) {\n      return new (t || AdminHomePageComponent)(i0.ɵɵdirectiveInject(i1.WasmService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AdminHomePageComponent,\n      selectors: [[\"admin-homepage\"]],\n      decls: 48,\n      vars: 3,\n      consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"hero\", \"is-fullheight\", 2, \"background\", \"#F3F1EE\"], [1, \"hero-head\"], [\"role\", \"navigation\", \"aria-label\", \"main navigation\", 1, \"navbar\", \"is-transparent\", \"px-6\"], [1, \"navbar-brand\"], [\"routerLink\", \"/home\", \"routerLinkActive\", \"active\", 1, \"navbar-item\"], [1, \"title\"], [1, \"navbar-selection\", \"ml-auto\"], [\"routerLink\", \"/admin-fileupload\", \"routerLinkActive\", \"active\", 1, \"navbar-item\", \"ml-auto\"], [1, \"nav-item\"], [\"routerLink\", \"/admin-recipes\", \"routerLinkActive\", \"active\", 1, \"navbar-item\"], [1, \"homepageTitle\", 2, \"font-size\", \"3.6rem\"], [1, \"hero-body\"], [1, \"container\"], [1, \"columns\", \"is-centered\", \"is-vcentered\"], [1, \"column\", \"is-6\", 2, \"padding\", \"0\"], [\"for\", \"dishName\"], [\"type\", \"text\", \"id\", \"dishName\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngIf\"], [\"for\", \"ingredient\"], [\"type\", \"text\", \"id\", \"ingredient\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"foodCostsChart\", \"width\", \"400\", \"height\", \"200\"], [\"id\", \"orderingFrequencyChart\", \"width\", \"400\", \"height\", \"200\"], [\"id\", \"reorderAlertChart\", \"width\", \"400\", \"height\", \"200\"], [\"id\", \"runningLowReminderChart\", \"width\", \"400\", \"height\", \"200\"], [\"id\", \"reorderPointChart\", \"width\", \"400\", \"height\", \"200\"]],\n      template: function AdminHomePageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n          i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"section\", 3)(5, \"div\", 4)(6, \"nav\", 5)(7, \"div\", 6)(8, \"a\", 7)(9, \"p\", 8);\n          i0.ɵɵtext(10, \" Yumzz\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"div\", 9)(12, \"a\", 10)(13, \"p\", 11);\n          i0.ɵɵtext(14, \"File Uploads\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(15, \"div\", 9);\n          i0.ɵɵelementStart(16, \"div\", 9)(17, \"a\", 12)(18, \"p\", 11);\n          i0.ɵɵtext(19, \"Recipe Management\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(20, \"h1\", 13);\n          i0.ɵɵtext(21, \"Admin Homepage\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(22, \"router-outlet\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"div\", 14)(24, \"div\", 15)(25, \"div\", 16)(26, \"div\", 17)(27, \"body\")(28, \"div\")(29, \"label\", 18);\n          i0.ɵɵtext(30, \"Enter Dish Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"input\", 19);\n          i0.ɵɵlistener(\"ngModelChange\", function AdminHomePageComponent_Template_input_ngModelChange_31_listener($event) {\n            return ctx.dishName = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"button\", 20);\n          i0.ɵɵlistener(\"click\", function AdminHomePageComponent_Template_button_click_32_listener() {\n            return ctx.calculateProfitMargin();\n          });\n          i0.ɵɵtext(33, \"Calculate Profitability\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(34, AdminHomePageComponent_div_34_Template, 3, 1, \"div\", 21);\n          i0.ɵɵelementStart(35, \"div\")(36, \"label\", 22);\n          i0.ɵɵtext(37, \"Ingredient:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"input\", 23);\n          i0.ɵɵlistener(\"ngModelChange\", function AdminHomePageComponent_Template_input_ngModelChange_38_listener($event) {\n            return ctx.ingredient = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(39, \"button\", 20);\n          i0.ɵɵlistener(\"click\", function AdminHomePageComponent_Template_button_click_39_listener() {\n            return ctx.calculateProfitMargin();\n          });\n          i0.ɵɵtext(40, \"Calculate Profit Margin\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(41, \"button\", 20);\n          i0.ɵɵlistener(\"click\", function AdminHomePageComponent_Template_button_click_41_listener() {\n            return ctx.deleteDish();\n          });\n          i0.ɵɵtext(42, \"Delete Dish\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(43, \"canvas\", 24)(44, \"canvas\", 25)(45, \"canvas\", 26)(46, \"canvas\", 27)(47, \"canvas\", 28);\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(31);\n          i0.ɵɵproperty(\"ngModel\", ctx.dishName);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.profitabilityResult !== null);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.ingredient);\n        }\n      },\n      dependencies: [i2.NgIf, i3.RouterOutlet, i3.RouterLink, i3.RouterLinkActive, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n      styles: [_c0, _c0]\n    });\n  }\n  return AdminHomePageComponent;\n})();\nexport { AdminHomePageComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}