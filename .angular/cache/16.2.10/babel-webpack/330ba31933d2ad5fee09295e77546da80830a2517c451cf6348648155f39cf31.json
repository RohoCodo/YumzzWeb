{"ast":null,"code":"import Chart from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nlet BcgMatrixComponent = /*#__PURE__*/(() => {\n  class BcgMatrixComponent {\n    ngAfterViewInit() {\n      this.drawScatterPlot();\n    }\n    drawScatterPlot() {\n      const canvas = document.getElementById('scatterPlot');\n      const ctx = canvas.getContext('2d');\n      const centerX = canvas.width / 2;\n      const centerY = canvas.height / 2;\n      const quadrant1 = [[5, 5], [10, 10]];\n      const quadrant2 = [[-5, 5], [-10, 10]];\n      const quadrant3 = [[-5, -5], [-10, -10]];\n      const quadrant4 = [[5, -5], [10, -10]];\n      function drawPoint(x, y, color) {\n        ctx.beginPath();\n        ctx.arc(centerX + x, centerY - y, 5, 0, 2 * Math.PI);\n        ctx.fillStyle = color;\n        ctx.fill();\n        ctx.stroke();\n      }\n      function drawScatterPlot() {\n        ctx.moveTo(centerX, 0);\n        ctx.lineTo(centerX, canvas.height);\n        ctx.stroke();\n        ctx.moveTo(0, centerY);\n        ctx.lineTo(canvas.width, centerY);\n        ctx.stroke();\n        quadrant1.forEach(point => drawPoint(point[0], point[1], 'green'));\n        quadrant2.forEach(point => drawPoint(point[0], point[1], 'red'));\n        quadrant3.forEach(point => drawPoint(point[0], point[1], 'blue'));\n        quadrant4.forEach(point => drawPoint(point[0], point[1], 'yellow'));\n      }\n      drawScatterPlot();\n    }\n    ngOnInit() {\n      // Call the existing Highcharts chart creation logic if needed\n      // this.createBcgMatrixChart();\n      this.drawScatterPlot();\n    }\n    createBcgMatrixChart() {\n      const ctx = document.getElementById('bcgMatrixChart');\n      const bcgMatrixChart = new Chart(ctx, {\n        type: 'scatter',\n        data: {\n          datasets: [{\n            label: 'Quadrant 1',\n            data: [{\n              x: 5,\n              y: 5\n            }, {\n              x: 10,\n              y: 10\n            }],\n            backgroundColor: 'rgba(0, 255, 0, 0.5)'\n          }, {\n            label: 'Quadrant 2',\n            data: [{\n              x: -5,\n              y: 5\n            }, {\n              x: -10,\n              y: 10\n            }],\n            backgroundColor: 'rgba(255, 0, 0, 0.5)'\n          }, {\n            label: 'Quadrant 3',\n            data: [{\n              x: -5,\n              y: -5\n            }, {\n              x: -10,\n              y: -10\n            }],\n            backgroundColor: 'rgba(0, 0, 255, 0.5)'\n          }, {\n            label: 'Quadrant 4',\n            data: [{\n              x: 5,\n              y: -5\n            }, {\n              x: 10,\n              y: -10\n            }],\n            backgroundColor: 'rgba(255, 255, 0, 0.5)'\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              type: 'linear',\n              position: 'bottom',\n              title: {\n                display: true,\n                text: 'X Axis'\n              },\n              grid: {\n                zeroLineColor: 'black' // Change the color of the x-axis line to black\n              }\n            },\n\n            y: {\n              type: 'linear',\n              position: 'left',\n              title: {\n                display: true,\n                text: 'Y Axis'\n              },\n              grid: {\n                zeroLineColor: 'black' // Change the color of the y-axis line to black\n              }\n            }\n          }\n        }\n      });\n    }\n    static #_ = this.ɵfac = function BcgMatrixComponent_Factory(t) {\n      return new (t || BcgMatrixComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: BcgMatrixComponent,\n      selectors: [[\"app-bcg-matrix\"]],\n      decls: 2,\n      vars: 0,\n      consts: [[\"id\", \"bcgMatrixChart\", \"width\", \"400\", \"height\", \"400\"]],\n      template: function BcgMatrixComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\");\n          i0.ɵɵelement(1, \"canvas\", 0);\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\"#bcgMatrixChart[_ngcontent-%COMP%]{border:1px solid #ddd}\"]\n    });\n  }\n  return BcgMatrixComponent;\n})();\nexport { BcgMatrixComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}