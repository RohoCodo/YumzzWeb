{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup } from \"@angular/forms\";\nlet HomepageComponent = class HomepageComponent {\n  constructor(db) {\n    this.db = db;\n    this.form = new FormGroup({\n      email: new FormControl('')\n    });\n  }\n  onSubmit() {\n    let data = this.form.value;\n    return new Promise((resolve, reject) => {\n      this.db.collection('EarlyAccessEmails').doc(data.email).set(data).then(res => {}, err => reject(err));\n    });\n  }\n  ngOnInit() {\n    $(document).on(\"click\", function (evt) {\n      evt.preventDefault();\n      if ($(evt.target).parent().is('.tab')) {\n        var screenSelected = $(evt.target).parent().data(\"anchor\");\n        $(\".screens\").children().each(function (index) {\n          if ($(this).data(\"id\") !== screenSelected) {\n            $(this).removeClass(\"is-active\");\n          } else {\n            $(this).addClass(\"is-active\");\n          }\n        });\n        $(evt.target).parent().parent().children().each(function (index) {\n          $(this).removeClass(\"is-active\");\n        });\n        $(evt.target).parent().addClass(\"is-active\");\n      } else if ($(evt.target).is('.tab')) {\n        var screenSelected = $(evt.target).data(\"anchor\");\n        $(\".screens\").children().each(function (index) {\n          if ($(this).data(\"id\") !== screenSelected) {\n            $(this).removeClass(\"is-active\");\n          } else {\n            $(this).addClass(\"is-active\");\n          }\n        });\n        $(evt.target).parent().children().each(function (index) {\n          $(this).removeClass(\"is-active\");\n        });\n        $(evt.target).addClass(\"is-active\");\n      }\n    });\n  }\n};\nHomepageComponent = __decorate([Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})], HomepageComponent);\nexport { HomepageComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}